m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 1
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
thres <- min(max(d/sum(filter)+bias,0),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
image(m)
image(resultR)
h = 50.0
w= 30.0
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
thres <- min(max(d/sum(filter)+bias,0),255)
print(sprintf("resultR=%f", thres))
resultR2[x,y] <- thres
}
}
image(m)
image(resultR2)
h = 50.0
w= 30.0
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
thres <- min(max(d/sum(filter)+bias,0),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
image(m)
image(resultR)
image(m)
image(resultR)
diagonal
h = 50.0
w= 30.0
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
filter <-[1,0,0;0,1,0;0,0,1]
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
thres <- min(max(d/sum(filter),0),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
image(m)
image(resultR)
image(m)
image(resultR)
filter
filter <-[1,0,0;0,1,0;0,0,1]
filter <-matrix(1,0,0;0,1,0;0,0,1)
filter <-matrix([1,0,0;0,1,0;0,0,1])
filter <-matrix((1,0,0),(0,1,0),(0,0,1))
matrix(1,3)
matrix(1,3,3)
matrix(10,3,3)
[1,3;2,2]
[1,3]
(1,3,2)
{1,32}
[1][13]
as.matrix([1,3])
{1,3}
<1,3
[1]
Diagonal(3)
Diagonal(2)
diag(3)
h = 50.0
w= 30.0
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
filter <-diag(3)
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
thres <- min(max(d/sum(filter),0),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
image(m)
image(resultR)
image(m)
image(resultR)
t <- resultR
h = 50.0
w= 30.0
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
#filter <-diag(3)
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
thres <- min(max(d/sum(filter),0),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
image(t)
image(m)
image(resultR)
image(t)
image(m)
image(t)
h = 50.0
w= 30.0
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
#filter <-diag(3)
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
# thres <- min(max(d/sum(filter),0),255)
thres <- min(abs(d/sum(filter)),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
t <- resultR
image(t)
image(m)
image(resultR)
d/sum(filter)
View(resultR)
h = 50.0
w= 30.0
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
#filter <-diag(3)
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- (x-floor(fx/2)+ fx + h) %%h)
imgY <- (y-floor(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
# thres <- min(max(d/sum(filter),0),255)
thres <- min(abs(d/sum(filter)),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
t <- resultR
image(t)
h = 50
w= 30
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
#filter <-diag(3)
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- (x-(fx/2)+ fx + h) %%h)
imgY <- (y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
# thres <- min(max(d/sum(filter),0),255)
thres <- min(abs(d/sum(filter)),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
t <- resultR
image(t)
h = 50
w= 30
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
#filter <-diag(3)
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- floor(x-(fx/2)+ fx + h) %%h)
imgY <- floor(y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
# thres <- min(max(d/sum(filter),0),255)
thres <- min(abs(d/sum(filter)),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
t <- resultR
image(t)
h = 50
w= 30
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
#filter <-diag(3)
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:3) {
for (fy in 1:3) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
# thres <- min(max(d/sum(filter),0),255)
thres <- min(abs(d/sum(filter)),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
t <- resultR
image(t)
h = 50
w= 30
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
filter <- matrix(runif(25, min=1, max=2),5,5)
bias <- 5
#filter <-diag(3)
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:5) {
for (fy in 1:5) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
# thres <- min(max(d/sum(filter),0),255)
thres <- min(abs(d/sum(filter)),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
t <- resultR
image(t)
filter
forceSymmetric(filter)
forceSymmetric(filter)
library(Matrix)
forceSymmetric
forceSymmetric(filter)
h = 50
w= 30
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
fsize
filter <- matrix(runif(fsize*fsize, min=1, max=8),fsize)
bias <- 5
forceSymmetric(filter)
#filter <-diag(3)
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:fsize) {
for (fy in 1:fsize) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
# thres <- min(max(d/sum(filter),0),255)
thres <- min(abs(d/sum(filter)),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
t <- resultR
image(t)
h = 50
w= 30
m <- matrix(runif(h*w, min=1, max=255),h,w)
resultR <-matrix(0,h,w)
fsize <- 5
filter <- matrix(runif(fsize*fsize, min=1, max=8),fsize)
bias <- 5
forceSymmetric(filter)
#filter <-diag(3)
for (x in 1:h) {
for (y in 1:w) {
d <- 0.0
for (fx in 1:fsize) {
for (fy in 1:fsize) {
imgX <- floor((x-(fx/2)+ fx + h) %%h)
imgY <- floor((y-(fy/2)+fy+w) %%w)
d <- d + (m[imgX,imgY] * filter[fx,fy])
o <- m[x,y]
#  print(sprintf("d=%f * %f",m[imgX,imgY], filter[fx,fy]))
print(sprintf("fx=%d, fy=%d, imgx=%d, imgy=%d,d=%f",fx,fy,imgX, imgY,d/sum(filter)))
}
}
# thres <- min(max(d/sum(filter),0),255)
thres <- min(abs(d/sum(filter)),255)
print(sprintf("resultR=%f", thres))
resultR[x,y] <- thres
}
}
image(m)
image(resultR)
t <- resultR
image(t)
install.packages("swirl")
install.packages("tm")
install.packages("shiny")
install.packages("lda")
install.packages("ggplot2")
install.packages("plyr")
install.packages("twitteR")
install.packages("plo")
install.packages("bst")
v <- matrix(rep(-1/(k-1) k*k), ncol=k)
setwd("/Users/jasminehsu/Development/FML-Project/preprocess")
data <- read.csv("sentiment_ngram_all.txt")
data <- read.csv("sentiment_ngram_all.txt", sep=" ")
data <- read.csv("sentiment_ngram_all.txt")
y <- data.frame(MANUF=sub(rexp,"\\1",x), MAKE=sub(rexp,"\\2",x))
exp <- "/\s+(?=\S*+$)/"
exp <- "\\s+(?=\\S*+$)"
y <- data.frame(MANUF=sub(rexp,"\\1",x), MAKE=sub(rexp,"\\2",x))
y <- data.frame(MANUF=sub(rexp,"\\1",data), MAKE=sub(rexp,"\\2",data))
exp <- "\\/\s+(?=\\S*+$)"
exp <- "^(\\s+(?=\\S*+$))"
y <- data.frame(MANUF=sub(rexp,"\\1",data), MAKE=sub(rexp,"\\2",data))
rexp <- "^(\\s+(?=\\S*+$))"
y <- data.frame(MANUF=sub(rexp,"\\1",data), MAKE=sub(rexp,"\\2",data))
rexp <- "\\s+(?=\\S*+$)"
y <- data.frame(MANUF=sub(rexp,"\\1",data), MAKE=sub(rexp,"\\2",data))
rexp <- "^(\\w+)\\s?(.*)$"
y <- data.frame(MANUF=sub(rexp,"\\1",data), MAKE=sub(rexp,"\\2",data))
tail(y)
View(y)
tail(y)
y <- data.frame(MANUF=sub(rexp,"\\1",data), MAKE=sub(rexp,"\\2",data))
View(y)
unlist(strsplit(data, " .*"))
unlist(strsplit(data, " .*"))
mat <- do.call("rbind", strsplit(sub(" ", ";", data), ";"))
View(mat)
View(data)
do.call(rbind, strsplit(vec, ' (?=[^ ]+$)', perl=TRUE))
do.call(rbind, strsplit(data, ' (?=[^ ]+$)', perl=TRUE))
do.call(rbind, strsplit(data, " (?=[^ ]+$)", perl=TRUE))
View(data)
colnames(data) <- (value)
colnames(data) <- ("value")
data$values <- as.character(data$values)
View(data)
data$value <- as.character(data$value)
do.call(rbind, strsplit(data, " (?=[^ ]+$)", perl=TRUE))
do.call(rbind, strsplit(data$value, " (?=[^ ]+$)", perl=TRUE))
test<- do.call(rbind, strsplit(data$value, " (?=[^ ]+$)", perl=TRUE))
View(test)
vec1 <- gsub(" [^ ]*$", "", data)
vec1 <- gsub(" [^ ]*$", "", data$value)
data <- read.csv("sentiment_ngram_all.txt")
data$value <- gsub(" [^ ]*$", "", data$value)
data <- do.call(rbind, strsplit(data$value, " (?=[^ ]+$)", perl=TRUE))
data$value <- as.character(data$value)
data <- read.csv("sentiment_ngram_all.txt")
colnames(data) <- ("value")
